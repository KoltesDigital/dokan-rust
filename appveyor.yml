os: Visual Studio 2019
branches:
  only:
    - master

environment:
  RUST_BACKTRACE: 1
  AccessTokenDokanDoc:
    secure: bWAI+3DIqfNZT/llXhEGiAsmSzJAmywFVyNgwHaTA5afb24GdHEQid6dRN5VJiTm
  matrix:
    - ARCH: x86_64
      TOOLCHAIN: msvc
      UPLOAD_DOC: "true"
    - ARCH: x86_64
      TOOLCHAIN: msvc
      USE_INSTALLED_LIB: "true"
    - ARCH: i686
      TOOLCHAIN: msvc
    - ARCH: i686
      TOOLCHAIN: msvc
      USE_INSTALLED_LIB: "true"
    - ARCH: x86_64
      TOOLCHAIN: gnu
      MSYSTEM: MINGW64
    - ARCH: x86_64
      TOOLCHAIN: gnu
      MSYSTEM: MINGW64
      USE_INSTALLED_LIB: "true"
    - ARCH: i686
      TOOLCHAIN: gnu
      MSYSTEM: MINGW32
    - ARCH: i686
      TOOLCHAIN: gnu
      MSYSTEM: MINGW32
      USE_INSTALLED_LIB: "true"

install:
  - ps: |
      if ($Env:TOOLCHAIN -eq "gnu") {
          cmd /c 'C:\msys64\usr\bin\bash.exe -l -c "pacman -Syu --noconfirm --noprogressbar" 2>&1'
          cmd /c 'C:\msys64\usr\bin\bash.exe -l -c "pacman -Syu --needed --noconfirm --noprogressbar $MINGW_PACKAGE_PREFIX-toolchain" 2>&1'
          $Env:PATH = "C:\msys64\$Env:MSYSTEM\bin;$Env:PATH"
      }
  - ps: Invoke-WebRequest https://win.rustup.rs/x86_64 -OutFile "$Env:TEMP\rustup-init.exe"
  - cmd: "\"%TEMP%\\rustup-init.exe\" -y --default-host %ARCH%-pc-windows-%TOOLCHAIN%"
  - ps: $Env:PATH = "$Env:PATH;C:\Users\appveyor\.cargo\bin"
  - ps: |
      if ($Env:USE_INSTALLED_LIB -eq $true) {
          Invoke-WebRequest https://github.com/dokan-dev/dokany/releases/download/v1.4.0.1000/DokanSetup_redist.exe -OutFile "$Env:TEMP\DokanSetup.exe"
          Start-Process "$Env:TEMP\DokanSetup.exe" -ArgumentList "/quiet /norestart" -Wait
          $Env:DokanLibrary1_LibraryPath_x64 = "C:\Program Files\Dokan\Dokan Library-1.4.0\lib\"
          $Env:DokanLibrary1_LibraryPath_x86 = "C:\Program Files\Dokan\Dokan Library-1.4.0\x86\lib\"
      }

before_build:
  - ps: $version = (git describe --all --long).Split("/")[1]
  - ps: Update-AppveyorBuild -Version $version
  - cmd: git submodule update --init
  - ps: |
      if ($Env:USE_INSTALLED_LIB -ne $true) {
          $Env:DOKAN_DLL_OUTPUT_PATH = "$Env:APPVEYOR_BUILD_FOLDER\target\release"
      }

build_script:
  - cmd: cargo test --release --workspace --no-run
  - cmd: cargo doc --release --workspace

test_script:
  - cmd: cargo test --release --workspace
  - cmd: cargo test --release --workspace -- --ignored

deploy_script:
  - ps: |
      $ErrorActionPreference = "Stop"
      if ($Env:APPVEYOR_REPO_TAG -ne $true -or $Env:UPLOAD_DOC -ne $true) {
          return;
      }
      git config --global user.email appveyor@appveyor.org
      git config --global user.name appveyor
      cmd /c "git clone https://lirynastark:$($Env:AccessTokenDokanDoc)@github.com/dokan-dev/dokan-rust-doc.git doc 2>&1"
      if ($LASTEXITCODE -ne 0) { $host.SetShouldExit($LASTEXITCODE) }
      if (Test-Path doc\html) {
          Remove-Item -Recurse -Force doc\html\*
      } else {
          mkdir doc\html
      }
      Copy-Item -Recurse target\doc\* doc\html\
      cd doc
      if ($(git status --porcelain)) {
          Write-Host "Updating documentation..." -ForegroundColor Green
          git add -A
          git commit -m "Automatically update documentation for $version"
          cmd /c "git push 2>&1"
          if ($LASTEXITCODE -ne 0) { $host.SetShouldExit($LASTEXITCODE) }
          Write-Host -ForegroundColor Green "Documentation updated!"
      } else {
          Write-Host -ForegroundColor Green "No documentation changes detected."
      }
